@startuml

actor AdminUser
actor RegularUser
actor Visitor
participant WebApp as App
participant Database as DB


Visitor -> App: "Access signup"
App -> Visitor: "Show Sign-Up Form"
Visitor -> App: "Submit Sign-Up Form"
App -> DB: "Check User ID Availability"
alt User ID exists
    App -> Visitor: "Redirect to id taken"
else User ID is unique
    App -> DB: "Save New User Details"
    App -> Visitor: "Redirect to index"
end

Visitor -> App: "Access login"
App -> Visitor: "Show Login Form"
Visitor -> App: "Submit Login Form"
App -> DB: "Fetch User Credentials"
alt Password matches
    App -> Visitor: "Redirect to students"
else Password does not match
    App -> Visitor: "Redirect to login error"
end

group Access Create Student Form
    AdminUser -> App: "Access create Form"
    App -> AdminUser: "Show Create Student Form"
    AdminUser -> App: "Submit Create Student Form"
    App -> DB: "Check for Existing Student ID"
    alt Student ID exists
        App -> AdminUser: "Show Error"
    else Student ID is unique
        App -> DB: "Save New Student Details"
        App -> AdminUser: "Redirect to /students"
    end

    RegularUser -> App: "Access create Form"
    App -> RegularUser: "Redirect to /students with error"
    App -> RegularUser: "Show 'Access Denied' Message"
end

RegularUser -> App: "Access search"
App -> RegularUser: "Show Search Form"
RegularUser -> App: "Submit Search information"
App -> DB: "Fetch Matching Students"
App -> RegularUser: "Display Search Results"

group Access Delete Student
    AdminUser -> App: "Delete request"
    App -> DB: "Fetch Student and Related Grades"
    App -> DB: "Delete Grades"
    App -> DB: "Delete Student Record"
    App -> AdminUser: "Redirect to students"

    RegularUser -> App: "Delete request"
    App -> RegularUser: "Redirect to students with error"
    App -> RegularUser: "Show 'Access Denied' Message"
end

RegularUser -> App: "Access /students/<id>/graduation_check"
App -> DB: "Fetch Student and Grades"
App -> DB: "Calculate Total GPA and Credits"
alt Check graduation requirements
    App -> RegularUser: "Eligible for Graduation"
else Does not meet requirements
    App -> RegularUser: "Not Eligible for Graduation"
end

@enduml